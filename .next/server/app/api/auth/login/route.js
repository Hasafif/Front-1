"use strict";(()=>{var e={};e.id=873,e.ids=[873],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},72991:(e,s,t)=>{t.r(s),t.d(s,{headerHooks:()=>g,originalPathname:()=>f,patchFetch:()=>w,requestAsyncStorage:()=>d,routeModule:()=>l,serverHooks:()=>m,staticGenerationAsyncStorage:()=>c,staticGenerationBailout:()=>h});var r={};t.r(r),t.d(r,{GET:()=>p,POST:()=>p});var a=t(95419),o=t(69108),i=t(99678),n=t(94823),u=t(6521);async function p(e){let{usr:s,pwd:t}=await e.json();try{let e;let r=await n.db.user.findUnique({where:{name:s},select:{password:!0,isVerified:!0,id:!0,email:!0,token:!0}});if(!r)return Response.json({message:"User with this username don't exist"},{status:226});if(r?.password&&(e=await (0,u.compare)(t,r.password)),!e)return Response.json({message:"Wrong Password"},{status:226});if(!r.isVerified)return Response.json({message:"Your account is not verified"},{status:226});return Response.json({message:"logged in successfully",userId:r.id,email:r.email,token:r.token},{status:200})}catch(e){return console.log(`ERROR:${e.message}`),Response.json({error:e.message},{status:500})}}let l=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/auth/login/route",pathname:"/api/auth/login",filename:"route",bundlePath:"app/api/auth/login/route"},resolvedPagePath:"/home/ec2-user/g6Base1/next-front/app/api/auth/login/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:d,staticGenerationAsyncStorage:c,serverHooks:m,headerHooks:g,staticGenerationBailout:h}=l,f="/api/auth/login/route";function w(){return(0,i.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:c})}},94823:(e,s,t)=>{t.d(s,{db:()=>a});let r=require("@prisma/client"),a=globalThis.prisma??new r.PrismaClient},95419:(e,s,t)=>{e.exports=t(30517)}};var s=require("../../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),r=s.X(0,[456,521],()=>t(72991));module.exports=r})();